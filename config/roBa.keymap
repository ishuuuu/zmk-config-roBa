#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <3>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        kill_to_bol: kill_to_bol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp HOME>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp LC(X)>;

            label = "KILL_TO_BOL";
        };

        kill_to_eol: kill_to_eol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp LC(X)>;

            label = "KILL_TO_EOL";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_win {
            bindings = <
&kp Q           &kp W         &kp E         &kp R          &kp T                                 &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D         &kp F          &kp G  &kp LS(LG(S))      &kp TAB     &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z           &kp X         &kp C         &kp V          &kp B  &lt 5 W            &kp ESCAPE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL F13  &mo 3  &mo 4              &kp SPACE   &lt 2 F14                             &mo 4
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        default_layer_mac {
            bindings = <
&kp Q           &kp W             &kp E         &kp R             &kp T                                        &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A           &kp S             &kp D         &kp F             &kp G  &kp LS(LG(NUMBER_5))      &kp TAB     &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z           &kp X             &kp C         &kp V             &kp B  &lt 5 M                   &kp ESCAPE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_GUI F13  &mo 3  &mo 4                     &kp SPACE   &lt 2 F14                             &mo 4
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        NUM {
            bindings = <
&kp PIPE           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS                                               &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp DOUBLE_QUOTES  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp LEFT_BRACKET       &kp RIGHT_BRACKET
&kp SQT            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp EQUAL                    &trans          &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp LEFT_BRACE         &kp RIGHT_BRACE
&kp UNDERSCORE     &kp NUMBER_0  &kp PERIOD    &trans        &trans     &trans                       &trans          &trans                                                                      &kp TILDE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(X)     &kp END       &trans           &kp TAB                                &kp LC(V)       &kill_to_bol  &trans        &trans  &kp UP_ARROW
&kp HOME        &trans        &kp DELETE    &kp RIGHT_ARROW  &trans          &trans      &trans     &kp BACKSPACE   &trans        &kill_to_eol  &trans  &trans
&trans          &trans        &trans        &trans           &kp LEFT_ARROW  &trans      &trans     &kp DOWN_ARROW  &trans        &trans        &trans  &trans
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL        &trans          &trans      &kp ENTER  &trans                                              &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans              &kp F7  &kp F8  &kp F9  &kp F10                      &trans  &mkp MB4        &msc SCRL_UP    &mkp MB5         &trans
&kp LC(LA(DELETE))  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans  &trans  &mkp MB1        &msc SCRL_DOWN  &mkp MB2         &trans
&trans              &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &trans  &msc SCRL_LEFT  &mkp MB3        &msc SCRL_RIGHT  &trans
&trans              &trans  &trans  &trans  &trans   &trans      &trans  &trans                                                   &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans      &trans  &tog 0                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans      &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &bt BT_CLR  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans      &trans  &trans  &trans      &trans  &trans                                                  &trans
            >;
        };
    };
};
